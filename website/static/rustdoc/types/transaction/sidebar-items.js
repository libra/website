initSidebarItems({"enum":[["TransactionArgument",""],["TransactionPayload",""],["TransactionStatus","The status of executing a transaction. The VM decides whether or not we should `Keep` the transaction output or `Discard` it based upon the execution of the transaction. We wrap these decisions around a `VMStatus` that provides more detail on the final execution state of the VM."]],"struct":[["AgreedTransaction","AgreedTransaction is created by the LogStore module. The consensus module produces SignedTransaction once the ordering of transactions has been determined. And storing SignedTransaction to LogStore produces AgreedTransaction"],["ExecutedTransaction","ExecutedTransaction is created by execution module."],["Program",""],["RawTransaction","RawTransaction is the portion of a transaction that a client signs"],["SignedTransaction","SignedTransaction is what a client submits to a validator node"],["TransactionInfo","`TransactionInfo` is the object we store in the transaction accumulator. It consists of the transaction as well as the execution result of this transaction."],["TransactionListWithProof","The list may have three states: 1. The list is empty. Both proofs must be `None`. 2. The list has only 1 transaction/transaction_info. Then `proof_of_first_transaction` must exist and `proof_of_last_transaction` must be `None`. 3. The list has 2+ transactions/transaction_infos. The both proofs must exist."],["TransactionOutput","The output of executing a transaction. TODO: clean up language/language_common/src/transaction_output."],["TransactionToCommit",""]],"type":[["Version",""]]});