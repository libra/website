(function() {var implementors = {};
implementors["patricia_merkle"] = [{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"patricia_merkle/node_type/struct.BranchType.html\" title=\"struct patricia_merkle::node_type::BranchType\">BranchType</a>",synthetic:false,types:["patricia_merkle::node_type::BranchType"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"patricia_merkle/node_type/struct.ExtensionType.html\" title=\"struct patricia_merkle::node_type::ExtensionType\">ExtensionType</a>",synthetic:false,types:["patricia_merkle::node_type::ExtensionType"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"patricia_merkle/node_type/struct.LeafType.html\" title=\"struct patricia_merkle::node_type::LeafType\">LeafType</a>",synthetic:false,types:["patricia_merkle::node_type::LeafType"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"patricia_merkle/node_type/struct.NullType.html\" title=\"struct patricia_merkle::node_type::NullType\">NullType</a>",synthetic:false,types:["patricia_merkle::node_type::NullType"]},];
implementors["sparse_merkle"] = [{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"sparse_merkle/node_type/struct.BranchNode.html\" title=\"struct sparse_merkle::node_type::BranchNode\">BranchNode</a>",synthetic:false,types:["sparse_merkle::node_type::BranchNode"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"sparse_merkle/node_type/struct.ExtensionNode.html\" title=\"struct sparse_merkle::node_type::ExtensionNode\">ExtensionNode</a>",synthetic:false,types:["sparse_merkle::node_type::ExtensionNode"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"sparse_merkle/node_type/struct.LeafNode.html\" title=\"struct sparse_merkle::node_type::LeafNode\">LeafNode</a>",synthetic:false,types:["sparse_merkle::node_type::LeafNode"]},];
implementors["types"] = [{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/account_address/struct.AccountAddress.html\" title=\"struct types::account_address::AccountAddress\">AccountAddress</a>",synthetic:false,types:["types::account_address::AccountAddress"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/account_state_blob/struct.AccountStateBlob.html\" title=\"struct types::account_state_blob::AccountStateBlob\">AccountStateBlob</a>",synthetic:false,types:["types::account_state_blob::AccountStateBlob"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/contract_event/struct.ContractEvent.html\" title=\"struct types::contract_event::ContractEvent\">ContractEvent</a>",synthetic:false,types:["types::contract_event::ContractEvent"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/language_storage/struct.CodeKey.html\" title=\"struct types::language_storage::CodeKey\">CodeKey</a>",synthetic:false,types:["types::language_storage::CodeKey"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/language_storage/struct.StructTag.html\" title=\"struct types::language_storage::StructTag\">StructTag</a>",synthetic:false,types:["types::language_storage::StructTag"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/ledger_info/struct.LedgerInfo.html\" title=\"struct types::ledger_info::LedgerInfo\">LedgerInfo</a>",synthetic:false,types:["types::ledger_info::LedgerInfo"]},{text:"impl&lt;H:&nbsp;<a class=\"trait\" href=\"crypto/hash/trait.CryptoHasher.html\" title=\"trait crypto::hash::CryptoHasher\">CryptoHasher</a>&gt; <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/proof/struct.MerkleTreeInternalNode.html\" title=\"struct types::proof::MerkleTreeInternalNode\">MerkleTreeInternalNode</a>&lt;H&gt;",synthetic:false,types:["types::proof::MerkleTreeInternalNode"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/proof/struct.SparseMerkleLeafNode.html\" title=\"struct types::proof::SparseMerkleLeafNode\">SparseMerkleLeafNode</a>",synthetic:false,types:["types::proof::SparseMerkleLeafNode"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/transaction/struct.RawTransaction.html\" title=\"struct types::transaction::RawTransaction\">RawTransaction</a>",synthetic:false,types:["types::transaction::RawTransaction"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/transaction/struct.SignedTransaction.html\" title=\"struct types::transaction::SignedTransaction\">SignedTransaction</a>",synthetic:false,types:["types::transaction::SignedTransaction"]},{text:"impl <a class=\"trait\" href=\"crypto/hash/trait.CryptoHash.html\" title=\"trait crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"types/transaction/struct.TransactionInfo.html\" title=\"struct types::transaction::TransactionInfo\">TransactionInfo</a>",synthetic:false,types:["types::transaction::TransactionInfo"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
